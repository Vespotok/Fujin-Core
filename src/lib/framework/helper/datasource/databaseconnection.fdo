<?php

/**
 * Copyright 2023 Ing. Tomas Kracik (Vespotok)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * @package     FujinFramework
 * @subpackage  Helpers
 * @author      Vespotok veDev - Tomáš Kracík <kracik@vespotok.net>
 */
namespace Fujin\Framework\Helper\DataSource;

use mysqli_result;
use mysqli;

// TODO: make this dbsys agnostic, aka - based on filesystem, not connection

class DatabaseConnection
{
    private \mysqli $dataconnection;
    private bool $connected = false;
    const CHARSET = "utf8";

    /**
     * Class construct
     * @param string $db - optional name of database
     */
    public function __construct(string $db = "")
    {
        if (isset($_SESSION["fjx_db_dataconfig"]) && $_SESSION["fjx_db_dataconfig"] != "") {
            $localdb = $_SESSION["fjx_db_dataconfig"];
        } else {
            $_SESSION["fjx_db_dataconfig"] = json_decode(file_get_contents($_SESSION["fjx_root"] . "/etc/db.fjconf"));
            $localdb = $_SESSION["fjx_db_dataconfig"];
        }

        $database = $localdb->dbname;

        if($db != "")
            $database = $db;

        $this->dataconnection = new mysqli($localdb->dbhost, $localdb->dbusername, $localdb->dbpassword, $database);
        mysqli_set_charset($this->dataconnection, "utf8");

        $this->check_connection();
    }

    /**
     * Do SQL query and return array /QUERY_ARRAY/
     * @param string $sql_query - SQL query to be executed
     * @return array - returned array
     */
    public function qa(string $sql_query) : array
    {
        $result[] = null;
        if($this->connected)
        {
            $query = mysqli_query($this->dataconnection, $sql_query) or $this->die_locally($this->dataconnection);
            while ($row = $query->fetch_assoc()) {
                $result[] = $row;
            }
        }
        $returning = array_values(array_filter($result));
        /*// For helping
        $returning["net.vespotok.fujin.framework.helper.datasource.sql_query"] = $sql_query;*/
        //file_put_contents(FUJIN_ROOT."/tmp/dbdebug",file_get_contents(FUJIN_ROOT . "/tmp/dbdebug") . $sql_query."\n\n". USER." DB END \n\n");
        return $returning;
    }

    /**
     * Do DML SQL query and return bool /QUERY_BOOL/
     * @param string $sql_query - SQL query to be executed
     * @return bool - returns true on success
     */
    public function qb(string $sql_query): bool
    {
        $result = false;
        if ($this->connected) {
            $query = mysqli_query($this->dataconnection, $sql_query) or $this->die_locally($this->dataconnection);
            if($query != false)
                $result = true;
        }
        //file_put_contents(FUJIN_ROOT . "/tmp/dbdebug", file_get_contents(FUJIN_ROOT . "/tmp/dbdebug") . $sql_query . "\n\n" . USER . " DB END \n\n");
        return $result;
    }

    /**
     * Do SQL query and return mysqli_result /QUERY_RESULT/
     * @param string $sql_query - SQL query to be executed
     * @return mysqli_result - returns result
     */
    public function qr(string $sql_query): mysqli_result
    {
       // file_put_contents(FUJIN_ROOT . "/tmp/dbdebug", file_get_contents(FUJIN_ROOT . "/tmp/dbdebug") . $sql_query . "\n\n" . USER . " DB END \n\n");
        if ($this->connected) {
            $result = mysqli_query($this->dataconnection, $sql_query) or $this->die_locally($this->dataconnection);
            return $result;
        }
    }

    /**
     * Checks if the connection has been successfully established
     */
    private function check_connection()
    {
        if ($this->dataconnection->connect_errno) {
            echo "Error:Database connection could not be established!";
            echo $this->dataconnection->connect_errno . " + " . $this->dataconnection->connect_error;
        }
        else
        {
            $this->connected = true;
        }
    }

    private function die_locally($connection) {
        $error = mysqli_error($connection);
        echo "Error: ".$error;
        $errfil = FUJIN_ROOT . "/tmp/dberr.log";
        $errcontents = file_get_contents($errfil);
        file_put_contents($errfil, $errcontents . $error);
    }
}